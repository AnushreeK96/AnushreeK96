var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.848,1,0.996]],["body/injectables/ApiService.html",[0,0.807,1,1.728,2,0.845,3,0.306,4,0.248,5,0.248,6,1.219,7,0.611,8,1.891,9,1.311,10,2.826,11,2.198,12,2.395,13,2.466,14,2.395,15,0.306,16,0.948,17,3.312,18,1.445,19,2.317,20,1.445,21,1.113,22,2.153,23,2.611,24,2.611,25,2.611,26,3.307,27,1.891,28,1.891,29,1.891,30,0.441,31,1.543,32,2.611,33,1.265,34,2.395,35,1.664,36,0.065,37,1.022,38,0.811,39,1.664,40,2.611,41,1.543,42,1.559,43,1.559,44,2.198,45,3.12,46,1.543,47,1.207,48,2.611,49,1.543,50,2.611,51,2.73,52,1.543,53,1.207,54,1.81,55,2.395,56,1.618,57,1.543,58,2.395,59,1.891,60,3.307,61,1.891,62,1.543,63,2.611,64,2.991,65,1.364,66,2.395,67,1.543,68,1.891,69,1.543,70,1.364,71,1.364,72,1.543,73,1.664,74,1.543,75,1.081,76,0.37,77,1.219,78,1.005,79,1.543,80,1.005,81,1.219,82,1.219,83,0.475,84,0.227,85,1.005,86,0.845,87,1.005,88,2.317,89,2.153,90,1.81,91,1.899,92,2.074,93,1.543,94,1.543,95,1.364,96,2.317,97,1.543,98,1.543,99,1.543,100,1.543,101,1.543,102,1.543,103,1.543,104,1.543,105,1.543,106,2.395,107,1.543,108,2.934,109,2.317,110,1.543,111,2.395,112,1.543,113,1.543,114,1.543,115,1.543,116,1.543,117,1.543,118,1.543,119,1.543,120,1.543,121,1.543,122,1.543,123,1.543,124,1.543,125,1.543,126,1.219,127,1.891,128,1.543,129,1.543,130,0.029,131,0.029]],["title/components/AppComponent.html",[132,0.499,133,0.718]],["body/components/AppComponent.html",[3,0.645,4,0.523,5,0.523,36,0.063,37,1.153,47,1.095,53,1.095,75,0.928,76,0.779,83,0.645,84,0.308,86,2.212,130,0.05,131,0.05,132,0.873,133,1.313,134,1.878,135,1.779,136,1.779,137,1.779,138,1.779,139,2.565,140,1.779,141,2.641,142,2.242,143,2.212,144,4.397,145,2.212,146,4.04,147,1.779,148,2.212,149,2.212,150,1.779,151,2.519,152,1.779,153,1.779,154,0.928,155,1.779,156,0.928,157,1.779,158,0.928,159,1.779,160,1.779,161,1.779]],["title/modules/AppModule.html",[162,1.987,163,1.377]],["body/modules/AppModule.html",[1,1.741,3,0.463,4,0.376,5,0.376,32,2.565,36,0.064,75,1.447,76,0.559,77,1.843,83,0.463,84,0.222,130,0.04,131,0.04,133,1.377,154,1.255,156,1.255,158,1.255,163,2.718,164,1.519,165,1.779,166,1.843,167,1.843,168,1.843,169,1.843,170,1.482,171,2.565,172,1.843,173,1.519,174,2.334,175,3.249,176,3.249,177,3.249,178,3.249,179,2.565,180,1.519,181,3.249,182,2.334,183,2.334,184,2.334,185,1.519,186,2.334,187,2.334,188,1.519,189,2.334,190,3.249,191,2.334,192,3.249,193,1.843,194,3.249,195,3.249,196,2.334,197,3.249,198,2.334,199,3.249,200,2.334,201,3.249,202,2.334,203,3.249,204,2.334,205,3.249,206,1.843,207,3.249,208,1.843,209,3.249,210,2.334,211,2.334,212,3.249,213,2.334,214,3.249,215,1.843,216,3.249,217,1.843,218,3.249,219,2.334,220,1.843,221,3.249,222,2.334,223,2.334,224,1.843,225,2.334]],["title/classes/CountryData.html",[18,0.848,84,0.239]],["body/classes/CountryData.html",[3,0.572,4,0.464,5,0.464,7,1.142,15,0.572,16,1.483,18,1.262,30,1.188,33,1.378,36,0.063,38,0.945,47,0.972,56,1.483,73,2.213,83,0.572,84,0.274,130,0.046,131,0.046,226,1.877,227,2.277,228,2.277,229,2.277,230,2.884,231,2.884,232,4.053,233,3.284,234,2.708,235,2.708,236,2.708,237,2.708,238,2.708,239,2.708,240,3.745,241,2.884,242,3.246,243,2.884,244,2.884,245,2.884,246,2.884,247,2.884,248,2.884,249,2.277,250,2.277,251,2.277,252,2.277,253,2.277,254,2.277]],["title/components/CountryStatisticsComponent.html",[132,0.499,154,0.718]],["body/components/CountryStatisticsComponent.html",[3,0.264,4,0.214,5,0.214,7,0.526,9,1.165,11,1.651,15,0.264,16,0.843,18,1.307,21,0.989,30,0.76,33,1.269,35,1.414,36,0.064,37,1.107,38,0.814,39,1.414,44,1.734,47,1.438,53,0.448,56,1.779,65,1.548,70,1.548,71,1.548,75,0.951,76,0.318,83,0.422,84,0.202,89,1.385,90,1.666,91,1.414,92,0.727,95,2.015,130,0.026,131,0.026,132,0.661,133,0.379,134,0.989,135,0.727,136,0.727,137,0.727,138,0.727,140,0.727,141,1.945,142,1.651,143,1.165,145,1.165,147,0.727,148,1.165,149,1.165,150,0.727,151,1.666,152,0.727,153,0.727,154,1.142,155,0.727,156,0.379,157,0.727,158,0.379,159,0.727,160,0.727,161,0.727,188,2.925,206,1.049,208,1.049,217,1.049,233,1.049,234,0.865,235,0.865,236,0.865,237,0.865,238,0.865,239,0.865,242,2.603,255,3.547,256,1.049,257,1.68,258,2.128,259,2.101,260,3.043,261,1.68,262,2.661,263,2.128,264,2.661,265,2.661,266,2.661,267,2.661,268,3.33,269,3.731,270,3.043,271,3.043,272,3.043,273,2.128,274,2.128,275,1.68,276,1.68,277,2.128,278,1.328,279,2.128,280,2.128,281,3.33,282,3.043,283,2.403,284,1.328,285,2.128,286,2.128,287,3.309,288,2.128,289,1.328,290,2.805,291,2.128,292,2.128,293,2.128,294,1.328,295,2.128,296,2.128,297,2.128,298,1.328,299,1.328,300,2.661,301,2.128,302,1.328,303,2.128,304,2.128,305,2.128,306,1.328,307,1.328,308,3.553,309,1.328,310,1.328,311,1.328,312,2.661,313,2.128,314,2.128,315,1.328,316,2.661,317,2.128,318,1.328,319,1.328,320,2.661,321,1.049,322,1.328,323,1.049,324,1.328,325,3.33,326,1.328,327,1.049,328,1.328,329,1.328,330,1.328,331,1.328,332,1.328,333,2.661,334,2.661,335,2.661,336,2.128,337,2.128,338,2.128,339,1.328,340,1.328,341,1.328,342,1.328,343,1.328,344,1.328,345,2.661,346,0.865,347,1.328,348,1.328,349,0.865,350,1.328,351,1.328,352,1.328,353,2.128,354,4.267,355,2.805,356,2.805,357,2.805,358,3.061,359,2.128,360,2.128,361,2.128,362,2.128,363,2.128,364,2.128,365,2.128,366,1.385,367,1.328,368,1.328,369,1.328,370,0.865,371,1.049,372,1.328]],["title/injectables/ExportService.html",[0,0.848,373,1.377]],["body/injectables/ExportService.html",[0,1.245,2,1.545,3,0.56,4,0.454,5,0.663,11,2.03,15,0.56,21,1.717,30,1.175,33,1.175,35,1.717,36,0.064,37,1.247,38,0.733,39,1.717,44,1.914,54,2.022,56,1.956,65,1.717,75,1.055,76,0.677,83,0.56,84,0.268,85,1.838,86,1.545,90,2.254,91,1.717,92,1.545,130,0.045,131,0.045,373,2.391,374,2.229,375,2.916,376,3.693,377,2.823,378,2.916,379,3.671,380,2.823,381,4.367,382,2.404,383,3.448,384,3.693,385,2.823,386,2.916,387,2.823,388,2.823,389,3.693,390,3.693,391,2.823,392,2.823,393,2.823,394,2.823,395,2.823,396,2.823,397,2.823,398,2.823]],["title/injectables/FacadeService.html",[0,0.848,170,0.848]],["body/injectables/FacadeService.html",[0,0.85,1,1.758,2,0.903,3,0.328,4,0.266,5,0.493,11,2.141,13,2.23,15,0.328,16,0.999,17,3.378,18,1.155,20,1.155,21,1.172,22,2.23,23,2.705,24,2.705,25,2.705,27,1.991,28,1.991,29,1.991,30,0.471,33,1.301,35,1.715,36,0.065,37,1.054,38,0.849,39,1.715,40,1.991,42,1.641,43,1.641,44,2.271,45,2.705,47,1.155,48,2.705,50,2.705,51,2.635,53,1.155,54,1.875,56,1.653,59,1.991,61,1.991,63,2.705,64,3.072,65,1.422,68,1.991,75,1.111,76,0.396,80,1.074,81,1.303,82,1.303,83,0.328,84,0.157,85,1.074,86,0.903,87,1.074,90,2.02,91,2.029,92,2.39,126,1.991,130,0.031,131,0.031,170,1.517,276,1.991,373,2.43,375,1.991,378,1.991,379,2.914,382,1.641,383,1.991,399,1.303,400,3.06,401,3.06,402,1.65,403,3.891,404,2.521,405,1.65,406,2.521,407,1.65,408,1.65,409,1.65,410,1.65,411,1.65,412,2.521,413,1.65,414,1.65,415,1.65,416,1.65,417,1.65,418,3.426,419,1.65,420,1.65,421,1.65,422,1.65,423,2.521,424,3.06,425,1.65,426,3.06,427,1.65,428,1.65,429,1.65,430,1.65,431,1.65,432,1.65,433,1.65,434,1.65,435,1.65]],["title/classes/GlobalData.html",[20,0.848,84,0.239]],["body/classes/GlobalData.html",[3,0.593,4,0.481,5,0.481,7,1.183,15,0.593,16,1.517,20,1.291,30,1.208,33,1.371,36,0.063,38,0.937,53,1.007,73,2.194,83,0.593,84,0.284,130,0.047,131,0.047,226,1.944,228,2.358,229,2.358,232,4.04,234,2.754,235,2.754,236,2.754,237,2.754,238,2.754,239,2.754,242,3.263,249,2.358,250,2.358,251,2.358,252,2.358,253,2.358,254,2.358,436,2.358,437,1.944,438,3.831,439,2.987,440,2.987,441,2.987,442,2.987,443,2.987]],["title/components/GlobalSummaryComponent.html",[132,0.499,156,0.718]],["body/components/GlobalSummaryComponent.html",[3,0.443,4,0.359,5,0.359,7,0.884,9,1.724,15,0.443,20,1.461,30,1.042,33,0.899,36,0.065,37,0.899,38,0.443,47,0.753,53,1.613,70,1.038,71,1.038,73,1.464,75,1.042,76,0.535,83,0.625,84,0.299,95,2.015,130,0.039,131,0.039,132,0.829,133,0.637,134,1.464,135,1.222,136,1.222,137,1.222,138,1.222,140,1.222,141,2.373,142,2.015,143,1.724,145,1.724,147,1.222,148,1.724,149,1.724,150,1.222,151,2.169,152,1.222,153,1.222,154,0.637,155,1.222,156,1.193,157,1.222,158,0.637,159,1.222,160,1.222,161,1.222,170,0.753,185,2.375,275,2.486,321,2.486,355,3.299,356,3.128,357,3.299,358,3.423,366,2.05,370,1.453,437,2.822,444,2.88,445,1.763,446,3.149,447,3.648,448,3.149,449,3.149,450,1.763,451,2.233,452,3.149,453,3.149,454,3.149,455,3.149,456,3.149,457,3.149,458,2.233,459,2.233,460,2.233,461,3.648,462,3.648,463,2.233,464,2.233,465,2.233,466,2.233,467,2.233,468,2.233,469,2.233,470,2.233,471,2.233,472,2.233,473,1.763,474,2.233,475,2.233,476,2.233]],["title/components/HomeComponent.html",[132,0.499,158,0.718]],["body/components/HomeComponent.html",[3,0.317,4,0.257,5,0.483,7,0.632,8,1.941,9,1.346,10,2.659,11,2.147,13,1.601,15,0.317,16,0.974,18,1.294,19,3.159,20,1.294,21,1.143,22,2.192,30,0.856,33,1.235,35,0.742,36,0.064,37,0.856,38,0.722,39,0.742,42,1.601,43,2.367,44,1.69,47,1.226,51,2.5,53,1.294,65,1.785,70,1.565,71,1.565,73,1.785,75,0.961,76,0.383,83,0.762,84,0.233,87,1.04,88,2.367,89,1.952,91,1.69,96,1.261,109,1.941,127,1.941,130,0.03,131,0.03,132,0.595,133,0.456,134,1.785,135,0.874,136,0.874,137,0.874,138,0.874,140,0.874,141,2.103,142,1.785,143,1.346,145,1.346,147,0.874,148,1.346,149,1.346,150,0.874,151,1.844,152,0.874,153,0.874,154,0.456,155,0.874,156,0.456,157,0.874,158,1.235,159,1.641,160,0.874,161,0.874,170,1.294,220,1.261,224,1.261,257,1.941,259,2.367,261,1.941,283,1.941,290,2.659,323,1.261,327,1.941,346,1.601,349,1.952,366,2.192,370,1.601,371,1.261,382,1.601,437,1.601,450,1.261,473,2.659,477,1.261,478,3.84,479,2.459,480,2.459,481,2.459,482,2.459,483,2.459,484,2.459,485,3.367,486,2.998,487,2.459,488,2.998,489,3.367,490,3.367,491,3.84,492,3.367,493,1.597,494,2.459,495,1.597,496,1.597,497,2.459,498,2.459,499,2.459,500,1.597,501,1.597,502,2.459,503,2.459,504,1.597,505,2.459,506,1.601,507,1.597,508,1.597,509,1.597,510,2.459,511,2.459,512,2.998,513,1.597,514,1.597,515,1.597,516,1.597,517,1.597,518,1.597,519,1.597,520,1.597,521,3.367,522,1.597,523,2.459,524,2.459,525,3.367,526,1.597,527,1.597,528,1.941,529,1.597,530,1.597,531,1.597,532,1.597,533,1.597,534,1.597,535,1.597,536,1.597,537,1.597]],["title/coverage.html",[538,2.701]],["body/coverage.html",[0,1.474,1,1.271,5,0.517,6,2.534,18,1.082,20,1.082,36,0.063,38,0.637,78,2.089,84,0.381,95,1.492,130,0.049,131,0.049,132,0.909,133,0.916,139,2.534,154,0.916,156,0.916,158,0.916,170,1.082,185,2.089,188,2.089,227,2.534,255,2.534,256,2.534,287,2.534,373,1.757,374,2.534,399,2.534,436,2.534,444,2.534,445,2.534,477,2.534,538,2.534,539,3.21,540,3.21,541,3.21,542,4.581,543,4.581,544,3.21,545,3.21,546,3.21,547,3.21,548,4.01,549,3.21,550,3.21,551,3.21,552,3.21,553,2.534,554,4.373,555,3.21,556,3.21,557,3.21,558,3.21,559,3.21,560,3.21,561,2.534,562,3.166,563,2.534,564,3.21]],["title/dependencies.html",[165,1.655,565,2.108]],["body/dependencies.html",[36,0.064,76,0.849,80,2.306,130,0.052,131,0.052,165,1.939,179,3.363,180,2.773,193,2.796,215,2.796,386,2.796,566,3.542,567,5.022,568,3.542,569,4.259,570,3.542,571,3.542,572,3.542,573,3.542,574,3.542,575,3.542,576,3.542,577,3.542,578,3.542,579,3.542]],["title/index.html",[15,0.418,580,2.108,581,2.108]],["body/index.html",[4,0.508,36,0.049,37,0.901,95,1.467,130,0.049,131,0.049,132,0.861,142,1.467,173,2.055,582,3.156,583,3.968,584,3.156,585,4.34,586,4.34,587,3.156,588,3.156,589,3.156,590,3.968,591,4.692,592,4.86,593,3.156,594,3.156,595,3.156,596,3.156,597,3.156,598,3.156,599,3.156,600,3.156,601,3.156,602,3.156,603,4.34,604,4.34,605,3.156,606,4.692,607,3.156,608,3.156,609,3.156,610,3.156,611,3.156,612,3.156,613,2.492,614,3.968,615,3.968,616,4.553,617,3.156,618,3.968,619,3.968,620,3.156,621,4.553,622,3.156,623,3.156,624,3.156,625,4.34,626,3.156,627,3.156,628,3.156,629,3.156]],["title/modules.html",[164,2.227]],["body/modules.html",[36,0.056,130,0.056,131,0.056,163,2.169,164,2.579,180,2.579,630,3.962,631,3.962,632,3.962]],["title/overview.html",[633,2.701]],["body/overview.html",[1,1.774,2,1.855,36,0.062,130,0.051,131,0.051,133,1.409,134,1.575,154,1.279,156,1.279,158,1.279,162,2.676,163,2.816,165,2.27,166,2.676,167,2.676,168,2.676,169,2.676,170,1.51,171,3.274,172,2.676,173,2.206,226,2.206,528,2.676,633,2.676,634,3.389,635,3.389,636,3.389]],["title/miscellaneous/variables.html",[506,1.968,637,1.664]],["body/miscellaneous/variables.html",[15,0.71,36,0.063,38,0.911,54,2.347,56,1.418,70,2.133,71,2.133,78,2.79,130,0.053,131,0.053,346,2.33,349,2.33,506,2.33,553,2.826,561,2.826,562,3.755,563,2.826,613,3.385,637,2.826,638,3.58,639,3.58,640,3.58,641,3.58]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0.10.3",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["0.17.3",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0080003b",{"_index":464,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["1",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["1/3",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":588,"title":{},"body":{"index.html":{}}}],["10.0.4",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":368,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["11",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["1rem",{"_index":459,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["2",{"_index":636,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["2rem",{"_index":372,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["3",{"_index":635,"title":{},"body":{"overview.html":{}}}],["33",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["3rem",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["4",{"_index":634,"title":{},"body":{"overview.html":{}}}],["5/15",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":537,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.5.5",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["9/13",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["_apiservice",{"_index":400,"title":{},"body":{"injectables/FacadeService.html":{}}}],["_exportservice",{"_index":401,"title":{},"body":{"injectables/FacadeService.html":{}}}],["accessors",{"_index":276,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"injectables/FacadeService.html":{}}}],["actual_component",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["afterviewinit",{"_index":260,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["again",{"_index":503,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliceblue",{"_index":466,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["allcolumns",{"_index":264,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["angular",{"_index":585,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["angular/compiler",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{}}}],["angular/material/progress",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{}}}],["angular/material/table",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{}}}],["angular/material/tabs",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["api.service",{"_index":421,"title":{},"body":{"injectables/FacadeService.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/FacadeService.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["app.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":133,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["appmodule",{"_index":163,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["artifacts",{"_index":607,"title":{},"body":{"index.html":{}}}],["asc",{"_index":348,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["ascending",{"_index":345,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["assign",{"_index":297,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["auto",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["automatically",{"_index":597,"title":{},"body":{"index.html":{}}}],["b",{"_index":281,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["b[colname",{"_index":352,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["background",{"_index":462,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["bar",{"_index":326,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["based",{"_index":292,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["boolean",{"_index":283,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":632,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":534,"title":{},"body":{"components/HomeComponent.html":{}}}],["build",{"_index":606,"title":{},"body":{"index.html":{}}}],["call",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["card",{"_index":461,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["catch",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch(err",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["change",{"_index":599,"title":{},"body":{"index.html":{}}}],["check",{"_index":628,"title":{},"body":{"index.html":{}}}],["child",{"_index":473,"title":{},"body":{"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["class",{"_index":84,"title":{"classes/CountryData.html":{},"classes/GlobalData.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["classes",{"_index":226,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{},"overview.html":{}}}],["classes/countrydata",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["classes/globaldata",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["cli",{"_index":586,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":303,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["cluster_appmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":601,"title":{},"body":{"index.html":{}}}],["colname",{"_index":343,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["color",{"_index":465,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["column",{"_index":304,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["columns",{"_index":300,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["commonmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["compare",{"_index":270,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["compare(a",{"_index":280,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["component",{"_index":132,"title":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["components",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["components/country",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["components/global",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["components/home/home.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed",{"_index":355,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{}}}],["console.log('error",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["const",{"_index":389,"title":{},"body":{"injectables/ExportService.html":{}}}],["constants/constants",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["constructor(facadeservice",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(http",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":402,"title":{},"body":{"injectables/FacadeService.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["container",{"_index":369,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["country",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/FacadeService.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["countrydata",{"_index":18,"title":{"classes/CountryData.html":{}},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["countryname",{"_index":233,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{}}}],["countryobj",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.countryname",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.newconfirmed",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.newdeaths",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.newrecovered",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.totalconfirmed",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.totaldeaths",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{}}}],["countryobj.totalrecovered",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{}}}],["countrystatisticscomponent",{"_index":154,"title":{"components/CountryStatisticsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrywise",{"_index":258,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["coverage",{"_index":538,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covid",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["covid_api",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["covidstatisticsviewer",{"_index":582,"title":{},"body":{"index.html":{}}}],["current",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["currentdate",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["data",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["data.map((item",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.newconfirmed",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.newdeaths",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.newrecovered",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.totalconfirmed",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{}}}],["data.totaldeaths",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["datasource",{"_index":265,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["date",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["date().gettime()}.xlsx",{"_index":388,"title":{},"body":{"injectables/ExportService.html":{}}}],["date(data.date",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{}}}],["datedata",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["dates",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{}}}],["death",{"_index":460,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["deaths",{"_index":356,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{}}}],["declarations",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":313,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["default",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["dependencies",{"_index":165,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["dev",{"_index":594,"title":{},"body":{"index.html":{}}}],["development",{"_index":589,"title":{},"body":{"index.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":605,"title":{},"body":{"index.html":{}}}],["directory",{"_index":610,"title":{},"body":{"index.html":{}}}],["display",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["displayed",{"_index":327,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["displayedcolumns",{"_index":266,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["displaying",{"_index":257,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["displayinng",{"_index":446,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["dist",{"_index":609,"title":{},"body":{"index.html":{}}}],["div",{"_index":471,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["documentation",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["dynamic",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":622,"title":{},"body":{"index.html":{}}}],["each",{"_index":231,"title":{},"body":{"classes/CountryData.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["element.countryname",{"_index":359,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["element.newconfirmed",{"_index":360,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["element.newdeaths",{"_index":362,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["element.newrecovered",{"_index":364,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["element.totalconfirmed",{"_index":361,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["element.totaldeaths",{"_index":363,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["element.totalrecovered",{"_index":365,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["end",{"_index":621,"title":{},"body":{"index.html":{}}}],["entered",{"_index":324,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["entries",{"_index":230,"title":{},"body":{"classes/CountryData.html":{}}}],["environment",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":305,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["event.active",{"_index":344,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["event.direction",{"_index":347,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["excel",{"_index":382,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["excelfilename",{"_index":379,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["excelfilename}_export_${new",{"_index":387,"title":{},"body":{"injectables/ExportService.html":{}}}],["execute",{"_index":618,"title":{},"body":{"index.html":{}}}],["export",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["export.service",{"_index":422,"title":{},"body":{"injectables/FacadeService.html":{}}}],["exportasexcelfile",{"_index":375,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["exportasexcelfile(json",{"_index":378,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["exportdata",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{}}}],["exports",{"_index":406,"title":{},"body":{"injectables/FacadeService.html":{}}}],["exportservice",{"_index":373,"title":{"injectables/ExportService.html":{}},"body":{"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"coverage.html":{}}}],["facadeservice",{"_index":170,"title":{"injectables/FacadeService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FacadeService.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["false",{"_index":346,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":366,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["fetchdata",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["fetching",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["ff000047",{"_index":463,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["field",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["files",{"_index":600,"title":{},"body":{"index.html":{}}}],["filter",{"_index":291,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["filterdata",{"_index":271,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["filterstring",{"_index":267,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["flag",{"_index":612,"title":{},"body":{"index.html":{}}}],["flex",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{}}}],["font",{"_index":474,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["forms",{"_index":381,"title":{},"body":{"injectables/ExportService.html":{}}}],["formsmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":285,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["further",{"_index":624,"title":{},"body":{"index.html":{}}}],["generate",{"_index":603,"title":{},"body":{"index.html":{}}}],["generated",{"_index":584,"title":{},"body":{"index.html":{}}}],["getapiservice",{"_index":416,"title":{},"body":{"injectables/FacadeService.html":{}}}],["getcountrydata",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["getcurrentdate",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["getexportservice",{"_index":419,"title":{},"body":{"injectables/FacadeService.html":{}}}],["getglobaldata",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["getservice",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["getservice(url",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{}}}],["getter",{"_index":418,"title":{},"body":{"injectables/FacadeService.html":{}}}],["getting",{"_index":580,"title":{"index.html":{}},"body":{}}],["given",{"_index":328,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["global",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["globaldata",{"_index":20,"title":{"classes/GlobalData.html":{}},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["globaldata.newconfirmed",{"_index":452,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["globaldata.newdeaths",{"_index":454,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["globaldata.newrecovered",{"_index":456,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["globaldata.totalconfirmed",{"_index":453,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["globaldata.totaldeaths",{"_index":455,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["globaldata.totalrecovered",{"_index":457,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["globalsummarycomponent",{"_index":156,"title":{"components/GlobalSummaryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["go",{"_index":627,"title":{},"body":{"index.html":{}}}],["header",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":625,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.css",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":158,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["http",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["http://localhost:4200",{"_index":596,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.covid19api.com/summary",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":259,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["import",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["imports",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["initialized",{"_index":296,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["initializes",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"overview.html":{}}}],["injector",{"_index":403,"title":{},"body":{"injectables/FacadeService.html":{}}}],["input",{"_index":321,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{}}}],["input('countrydata",{"_index":330,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["inputcountrydata",{"_index":277,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["inputcountrydata(val",{"_index":332,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["inputs",{"_index":275,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{}}}],["invoked",{"_index":290,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["invokes",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["invoking",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["isasc",{"_index":282,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["italic",{"_index":476,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["item.country",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{}}}],["item.newconfirmed",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{}}}],["item.newdeaths",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{}}}],["item.newrecovered",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{}}}],["item.totalconfirmed",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{}}}],["item.totaldeaths",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{}}}],["item.totalrecovered",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{}}}],["json",{"_index":383,"title":{},"body":{"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["karma",{"_index":620,"title":{},"body":{"index.html":{}}}],["landing",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["loading",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{}}}],["makes",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{}}}],["margin",{"_index":370,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["matbuttonmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":312,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["matpaginatormodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":316,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["matsortmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":308,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["mattabledatasource(this.countrydata",{"_index":336,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["mattablemodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["medium",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["memberof",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["metadata",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["miscellaneous",{"_index":637,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":162,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":164,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":626,"title":{},"body":{"index.html":{}}}],["name",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["navigate",{"_index":595,"title":{},"body":{"index.html":{}}}],["new",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"coverage.html":{},"index.html":{}}}],["newconfirmed",{"_index":234,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["newdeaths",{"_index":235,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["newrecovered",{"_index":236,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["ng",{"_index":592,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":272,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["ngmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["number",{"_index":242,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["object",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["oninit",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["optional",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["out",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":633,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":565,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["paginator",{"_index":268,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["param",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["parsed",{"_index":497,"title":{},"body":{"components/HomeComponent.html":{}}}],["parses",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["parsing",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["passing",{"_index":499,"title":{},"body":{"components/HomeComponent.html":{}}}],["pre",{"_index":470,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["private",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["prod",{"_index":611,"title":{},"body":{"index.html":{}}}],["production",{"_index":613,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":583,"title":{},"body":{"index.html":{}}}],["properties",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/HomeComponent.html":{}}}],["protractor",{"_index":623,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["providers",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":232,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["readme",{"_index":629,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":423,"title":{},"body":{"injectables/FacadeService.html":{}}}],["recovered",{"_index":357,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{}}}],["refresh",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{}}}],["refreshes",{"_index":502,"title":{},"body":{"components/HomeComponent.html":{}}}],["reload",{"_index":598,"title":{},"body":{"index.html":{}}}],["required",{"_index":498,"title":{},"body":{"components/HomeComponent.html":{}}}],["reset",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsible",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["results",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["returns",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["right",{"_index":536,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{}}}],["root'},{'name",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["row",{"_index":458,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["run",{"_index":591,"title":{},"body":{"index.html":{}}}],["running",{"_index":614,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":602,"title":{},"body":{"index.html":{}}}],["schema",{"_index":228,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["search",{"_index":325,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["searched",{"_index":293,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["selector",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["serve",{"_index":593,"title":{},"body":{"index.html":{}}}],["server",{"_index":590,"title":{},"body":{"index.html":{}}}],["service",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["services/api.service",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["services/facade.service",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["set",{"_index":331,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["setcountrydata",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["setcountrydata(data",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["setcurrentdate",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["setcurrentdate(data",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{}}}],["setcurrentdate(datedata",{"_index":412,"title":{},"body":{"injectables/FacadeService.html":{}}}],["setglobaldata",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["setglobaldata(data",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["setinitialvalues",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["setinputcountrydata(val",{"_index":319,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["sets",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FacadeService.html":{}}}],["sheetnames",{"_index":396,"title":{},"body":{"injectables/ExportService.html":{}}}],["sheets",{"_index":395,"title":{},"body":{"injectables/ExportService.html":{}}}],["show",{"_index":354,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["showcolumns",{"_index":273,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["showcolumns(...columns",{"_index":298,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["sort",{"_index":269,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["sortdata",{"_index":274,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["sortdata(event",{"_index":301,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["sorting",{"_index":288,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["space",{"_index":469,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["spacer",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["spacing",{"_index":535,"title":{},"body":{"components/HomeComponent.html":{}}}],["span",{"_index":467,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["span:first",{"_index":472,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["spinner",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["src/.../constants.ts",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/countrydata",{"_index":323,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/classes/countrydata.ts",{"_index":227,"title":{},"body":{"classes/CountryData.html":{},"coverage.html":{}}}],["src/app/classes/countrydata.ts:10",{"_index":246,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/countrydata.ts:11",{"_index":244,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/countrydata.ts:12",{"_index":247,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/countrydata.ts:13",{"_index":245,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/countrydata.ts:14",{"_index":240,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/countrydata.ts:8",{"_index":241,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/countrydata.ts:9",{"_index":243,"title":{},"body":{"classes/CountryData.html":{}}}],["src/app/classes/globaldata",{"_index":450,"title":{},"body":{"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/classes/globaldata.ts",{"_index":436,"title":{},"body":{"classes/GlobalData.html":{},"coverage.html":{}}}],["src/app/classes/globaldata.ts:10",{"_index":440,"title":{},"body":{"classes/GlobalData.html":{}}}],["src/app/classes/globaldata.ts:11",{"_index":443,"title":{},"body":{"classes/GlobalData.html":{}}}],["src/app/classes/globaldata.ts:12",{"_index":441,"title":{},"body":{"classes/GlobalData.html":{}}}],["src/app/classes/globaldata.ts:13",{"_index":438,"title":{},"body":{"classes/GlobalData.html":{}}}],["src/app/classes/globaldata.ts:8",{"_index":439,"title":{},"body":{"classes/GlobalData.html":{}}}],["src/app/classes/globaldata.ts:9",{"_index":442,"title":{},"body":{"classes/GlobalData.html":{}}}],["src/app/components/country",{"_index":255,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"coverage.html":{}}}],["src/app/components/global",{"_index":444,"title":{},"body":{"components/GlobalSummaryComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:23",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:35",{"_index":500,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:44",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:57",{"_index":496,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:82",{"_index":501,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:92",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/constants/constants.ts",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:100",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:110",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:120",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:134",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:19",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:20",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:21",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:35",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:45",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:55",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:75",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/export.service.ts",{"_index":374,"title":{},"body":{"injectables/ExportService.html":{},"coverage.html":{}}}],["src/app/services/export.service.ts:18",{"_index":385,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/export.service.ts:29",{"_index":380,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/export.service.ts:7",{"_index":377,"title":{},"body":{"injectables/ExportService.html":{}}}],["src/app/services/facade.service",{"_index":451,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["src/app/services/facade.service.ts",{"_index":399,"title":{},"body":{"injectables/FacadeService.html":{},"coverage.html":{}}}],["src/app/services/facade.service.ts:106",{"_index":413,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:116",{"_index":409,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:128",{"_index":405,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:13",{"_index":415,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:14",{"_index":404,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:25",{"_index":417,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:40",{"_index":420,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:53",{"_index":407,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:64",{"_index":414,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:74",{"_index":410,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:85",{"_index":411,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/app/services/facade.service.ts:95",{"_index":408,"title":{},"body":{"injectables/FacadeService.html":{}}}],["src/environments/environment.prod.ts",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":581,"title":{"index.html":{}},"body":{}}],["statements",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["statistics",{"_index":261,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["statistics'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["statistics.component",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["statistics.component.css",{"_index":262,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.html",{"_index":263,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts",{"_index":256,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"coverage.html":{}}}],["statistics.component.ts:21",{"_index":307,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:22",{"_index":309,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:23",{"_index":311,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:24",{"_index":310,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:25",{"_index":306,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:27",{"_index":315,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:28",{"_index":318,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:30",{"_index":279,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:37",{"_index":278,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:53",{"_index":294,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:63",{"_index":289,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:73",{"_index":302,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:90",{"_index":284,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics.component.ts:94",{"_index":299,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["statistics/country",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/CountryStatisticsComponent.html":{},"coverage.html":{}}}],["store",{"_index":229,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["stored",{"_index":608,"title":{},"body":{"index.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":475,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["styles",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["summary",{"_index":437,"title":{},"body":{"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["summary'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["summary.component",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["summary.component.css",{"_index":447,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["summary.component.html",{"_index":448,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["summary.component.ts",{"_index":445,"title":{},"body":{"components/GlobalSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:18",{"_index":449,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["summary/global",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/GlobalSummaryComponent.html":{},"coverage.html":{}}}],["support",{"_index":630,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":631,"title":{},"body":{"modules.html":{}}}],["table",{"_index":287,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"coverage.html":{}}}],["table_chart",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{}}}],["template",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["templateurl",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["test",{"_index":617,"title":{},"body":{"index.html":{}}}],["tests",{"_index":616,"title":{},"body":{"index.html":{}}}],["this._apiservice",{"_index":424,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this._exportservice",{"_index":426,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.allcolumns",{"_index":338,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.apiservice.fetchdata",{"_index":428,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.apiservice.getcountrydata",{"_index":432,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.apiservice.getcurrentdate",{"_index":434,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.apiservice.getglobaldata",{"_index":430,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.apiservice.setcountrydata(data",{"_index":431,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.apiservice.setcurrentdate(datedata",{"_index":433,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.apiservice.setglobaldata(data",{"_index":429,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.compare(a[colname",{"_index":351,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.countrydata",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["this.countrydata.sort((a",{"_index":350,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.countryname",{"_index":248,"title":{},"body":{"classes/CountryData.html":{}}}],["this.currentdate",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["this.datasource",{"_index":335,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.datasource.filter",{"_index":342,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.datasource.paginator",{"_index":333,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.datasource.sort",{"_index":340,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.displayedcolumns",{"_index":339,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.exportservice.exportasexcelfile(json",{"_index":435,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.facadeservice.exportasexcelfile([{countryname",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.fetchdata().subscribe((res",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.getcountrydata",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.getcurrentdate",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.getglobaldata",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.setcountrydata(res.countries",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.setcurrentdate(res.global",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.facadeservice.setglobaldata(res.global",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fetchdata",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterstring",{"_index":337,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.getservice(covid_api",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.globaldata",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["this.globaldata.newconfirmed",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.globaldata.newdeaths",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.globaldata.newrecovered",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.globaldata.totalconfirmed",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.globaldata.totaldeaths",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.globaldata.totalrecovered",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(url",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.injector.get(apiservice",{"_index":425,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.injector.get(exportservice",{"_index":427,"title":{},"body":{"injectables/FacadeService.html":{}}}],["this.loading",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.newconfirmed",{"_index":249,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["this.newdeaths",{"_index":251,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["this.newrecovered",{"_index":253,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["this.paginator",{"_index":334,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.setinitialvalues",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.sort",{"_index":341,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["this.toexportfilename(excelfilename",{"_index":398,"title":{},"body":{"injectables/ExportService.html":{}}}],["this.totalconfirmed",{"_index":250,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["this.totaldeaths",{"_index":252,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["this.totalrecovered",{"_index":254,"title":{},"body":{"classes/CountryData.html":{},"classes/GlobalData.html":{}}}],["through",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["time",{"_index":329,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["toexportfilename",{"_index":376,"title":{},"body":{"injectables/ExportService.html":{}}}],["toexportfilename(excelfilename",{"_index":384,"title":{},"body":{"injectables/ExportService.html":{}}}],["top",{"_index":371,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{}}}],["total",{"_index":358,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{}}}],["totalconfirmed",{"_index":237,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["totaldeaths",{"_index":238,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["totalrecovered",{"_index":239,"title":{},"body":{"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"classes/GlobalData.html":{}}}],["tree",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["true",{"_index":349,"title":{},"body":{"components/CountryStatisticsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{}}}],["tslib",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"classes/CountryData.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"classes/GlobalData.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":615,"title":{},"body":{"index.html":{}}}],["url",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{}}}],["use",{"_index":604,"title":{},"body":{"index.html":{}}}],["used",{"_index":286,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["val",{"_index":320,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["value",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CountryStatisticsComponent.html":{},"components/GlobalSummaryComponent.html":{},"components/HomeComponent.html":{}}}],["variable",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":506,"title":{"miscellaneous/variables.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":587,"title":{},"body":{"index.html":{}}}],["via",{"_index":619,"title":{},"body":{"index.html":{}}}],["view",{"_index":295,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["view_column",{"_index":353,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["viewchild",{"_index":322,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["viewchild('paginator",{"_index":314,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["viewchild(matsort",{"_index":317,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["void",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"components/CountryStatisticsComponent.html":{},"injectables/ExportService.html":{},"injectables/FacadeService.html":{},"components/HomeComponent.html":{}}}],["white",{"_index":468,"title":{},"body":{"components/GlobalSummaryComponent.html":{}}}],["width",{"_index":367,"title":{},"body":{"components/CountryStatisticsComponent.html":{}}}],["workbook",{"_index":393,"title":{},"body":{"injectables/ExportService.html":{}}}],["worksheet",{"_index":390,"title":{},"body":{"injectables/ExportService.html":{}}}],["worldwide",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["xlsx",{"_index":386,"title":{},"body":{"injectables/ExportService.html":{},"dependencies.html":{}}}],["xlsx.utils.json_to_sheet(json",{"_index":392,"title":{},"body":{"injectables/ExportService.html":{}}}],["xlsx.workbook",{"_index":394,"title":{},"body":{"injectables/ExportService.html":{}}}],["xlsx.worksheet",{"_index":391,"title":{},"body":{"injectables/ExportService.html":{}}}],["xlsx.writefile(workbook",{"_index":397,"title":{},"body":{"injectables/ExportService.html":{}}}],["y",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{}}}],["zone.js",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is responsible for fetching the data through the API and parsing the data\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                countryData\n                            \n                            \n                                    Private\n                                currentDate\n                            \n                            \n                                    Private\n                                globalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchData\n                            \n                            \n                                getCountryData\n                            \n                            \n                                getCurrentDate\n                            \n                            \n                                getGlobalData\n                            \n                            \n                                getService\n                            \n                            \n                                setCountryData\n                            \n                            \n                                setCurrentDate\n                            \n                            \n                                setGlobalData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchData\n                        \n                    \n                \n            \n            \n                \nfetchData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:45\n                \n            \n\n\n            \n                \n                    Invokes the getService with COVID API\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCountryData\n                        \n                    \n                \n            \n            \n                \ngetCountryData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:110\n                \n            \n\n\n            \n                \n                    Returns the Country Data array\n\n\n                    \n                    \n                    \n                        Returns :         CountryData[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentDate\n                        \n                    \n                \n            \n            \n                \ngetCurrentDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:134\n                \n            \n\n\n            \n                \n                    Returns the current Date\n\n\n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGlobalData\n                        \n                    \n                \n            \n            \n                \ngetGlobalData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:100\n                \n            \n\n\n            \n                \n                    Returns the Global Data object\n\n\n                    \n                    \n                    \n                        Returns :         GlobalData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:35\n                \n            \n\n\n            \n                \n                    Makes HTTP GET call on the URL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCountryData\n                        \n                    \n                \n            \n            \n                \nsetCountryData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:75\n                \n            \n\n\n            \n                \n                    Parses and Sets the Country Data array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentDate\n                        \n                    \n                \n            \n            \n                \nsetCurrentDate(data: string | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:120\n                \n            \n\n\n            \n                \n                    Sets the current date from the API\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGlobalData\n                        \n                    \n                \n            \n            \n                \nsetGlobalData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:55\n                \n            \n\n\n            \n                \n                    Parses and Sets the Global Data object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        countryData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CountryData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalData\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { COVID_API } from '../constants/constants';\nimport { Observable } from 'rxjs';\nimport { GlobalData } from '../classes/globalData';\nimport { CountryData } from '../classes/countryData';\n\n/**\n * This service is responsible for fetching the data through the API and parsing the data\n *\n * @export\n * @class ApiService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private globalData: GlobalData = null;\n  private countryData: CountryData[] = [];\n  private currentDate: Date = null;\n\n  constructor(private http: HttpClient) {\n    this.globalData = null;\n    this.countryData = [];\n  }\n\n  /**\n   * Makes HTTP GET call on the URL\n   *\n   * @param {string} url\n   * @returns {Observable}\n   * @memberof ApiService\n   */\n  getService(url: string): Observable {\n    return this.http.get(url);\n  }\n\n  /**\n   * Invokes the getService with COVID API\n   *\n   * @returns {Observable}\n   * @memberof ApiService\n   */\n  fetchData(): Observable {\n    return this.getService(COVID_API);\n  }\n\n  /**\n   * Parses and Sets the Global Data object\n   *\n   * @param {*} data\n   * @memberof ApiService\n   */\n  setGlobalData(data: any) {\n    this.globalData = new GlobalData();\n    try {\n      this.globalData.newConfirmed = data.NewConfirmed;\n      this.globalData.totalConfirmed = data.TotalConfirmed;\n      this.globalData.newDeaths = data.NewDeaths;\n      this.globalData.totalDeaths = data.TotalDeaths;\n      this.globalData.newRecovered = data.NewRecovered;\n      this.globalData.totalRecovered = data.NewRecovered;\n    } catch(err) {\n      console.log('Error while fetching global data');\n    }\n  }\n\n  /**\n   * Parses and Sets the Country Data array\n   *\n   * @param {*} data\n   * @memberof ApiService\n   */\n  setCountryData(data: any) {\n    this.countryData = [];\n    try {\n      this.countryData = data.map((item) => {\n        let countryObj = new CountryData();\n        countryObj.countryName = item.Country;\n        countryObj.newConfirmed = item.NewConfirmed;\n        countryObj.totalConfirmed = item.TotalConfirmed;\n        countryObj.newDeaths = item.NewDeaths;\n        countryObj.totalDeaths = item.TotalDeaths;\n        countryObj.newRecovered = item.NewRecovered;\n        countryObj.totalRecovered = item.TotalRecovered;\n        return countryObj;\n      });\n    } catch(err) {\n      console.log('Error while fetching country data');\n    }\n  }\n\n  /**\n   * Returns the Global Data object\n   *\n   * @returns {GlobalData}\n   * @memberof ApiService\n   */\n  getGlobalData(): GlobalData {\n    return this.globalData;\n  }\n\n  /**\n   * Returns the Country Data array\n   *\n   * @returns {CountryData[]}\n   * @memberof ApiService\n   */\n  getCountryData(): CountryData[] {\n    return this.countryData;\n  }\n\n  /**\n   * Sets the current date from the API\n   *\n   * @param {(string | any)} dateData\n   * @memberof ApiService\n   */\n  setCurrentDate(data: string | any) {\n    try {\n      this.currentDate = new Date(data.Date);\n    } catch(err) {\n      console.log('Error while fetching dates');\n    }\n  }\n\n  /**\n   * Returns the current Date\n   *\n   * @returns {Date}\n   * @memberof ApiService\n   */\n  getCurrentDate(): Date {\n    return this.currentDate;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountryStatisticsComponent', 'selector': 'app-country-statistics'},{'name': 'GlobalSummaryComponent', 'selector': 'app-global-summary'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCountryStatisticsComponent\n\nCountryStatisticsComponent\n\nAppModule -->\n\nCountryStatisticsComponent->AppModule\n\n\n\n\n\nGlobalSummaryComponent\n\nGlobalSummaryComponent\n\nAppModule -->\n\nGlobalSummaryComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nFacadeService\n\nFacadeService\n\nAppModule -->\n\nFacadeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CountryStatisticsComponent\n                        \n                        \n                            GlobalSummaryComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                        \n                            FacadeService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { GlobalSummaryComponent } from './components/global-summary/global-summary.component';\nimport { CountryStatisticsComponent } from './components/country-statistics/country-statistics.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule } from '@angular/forms';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ApiService } from './services/api.service';\nimport { FacadeService } from './services/facade.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    GlobalSummaryComponent,\n    CountryStatisticsComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatCardModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatMenuModule\n  ],\n  providers: [\n    HttpClient,\n    ApiService,\n    FacadeService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CountryData.html":{"url":"classes/CountryData.html","title":"class - CountryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CountryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/countryData.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema to store entries for each Country\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryName\n                            \n                            \n                                    Public\n                                newConfirmed\n                            \n                            \n                                    Public\n                                newDeaths\n                            \n                            \n                                    Public\n                                newRecovered\n                            \n                            \n                                    Public\n                                totalConfirmed\n                            \n                            \n                                    Public\n                                totalDeaths\n                            \n                            \n                                    Public\n                                totalRecovered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/countryData.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        countryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newDeaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newRecovered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalDeaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalRecovered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/countryData.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CountryData {\n    public countryName: string;\n    public newConfirmed: number;\n    public totalConfirmed: number;\n    public newDeaths: number;\n    public totalDeaths: number;\n    public newRecovered: number;\n    public totalRecovered: number;\n\n    constructor() {\n        this.countryName = null;\n        this.newConfirmed = null;\n        this.totalConfirmed = null;\n        this.newDeaths = null;\n        this.totalDeaths = null;\n        this.newRecovered = null;\n        this.totalRecovered = null;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryStatisticsComponent.html":{"url":"components/CountryStatisticsComponent.html","title":"component - CountryStatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CountryStatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/country-statistics/country-statistics.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for displaying Countrywise data\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-country-statistics\n            \n\n            \n                styleUrls\n                ./country-statistics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./country-statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allColumns\n                            \n                            \n                                countryData\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                filterString\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compare\n                            \n                            \n                                filterData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showColumns\n                            \n                            \n                                sortData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                countryData\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    inputCountryData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        countryData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/country-statistics/country-statistics.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(a: number | string, b: number | string, isAsc: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/country-statistics/country-statistics.component.ts:90\n                \n            \n\n\n            \n                \n                    Compare function used for table sorting\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAsc\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterData\n                        \n                    \n                \n            \n            \n                \nfilterData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/country-statistics/country-statistics.component.ts:63\n                \n            \n\n\n            \n                \n                    Invoked to filter the table based on searched string\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/country-statistics/country-statistics.component.ts:53\n                \n            \n\n\n            \n                \n                    Invoked after the table view is initialized to assign the paginator and sort to the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showColumns\n                        \n                    \n                \n            \n            \n                \nshowColumns(...columns: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/country-statistics/country-statistics.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columns\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortData\n                        \n                    \n                \n            \n            \n                \nsortData(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/country-statistics/country-statistics.component.ts:73\n                \n            \n\n\n            \n                \n                    Invoked on clicking sort on any column\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countryData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CountryData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                \n                    \n                        Default value : new MatTableDataSource([])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('paginator')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-statistics/country-statistics.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        inputCountryData\n                    \n                \n\n\n                \n                    \n                        setinputCountryData(val)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/country-statistics/country-statistics.component.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CountryData } from 'src/app/classes/countryData';\n\n/**\n * This component is responsible for displaying Countrywise data\n *\n * @export\n * @class CountryStatisticsComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-country-statistics',\n  templateUrl: './country-statistics.component.html',\n  styleUrls: ['./country-statistics.component.css']\n})\nexport class CountryStatisticsComponent implements AfterViewInit {\n\n  countryData: CountryData[] = [];\n  dataSource: MatTableDataSource = new MatTableDataSource([]); // data for the table\n  filterString: string = ''; // data entered in search bar\n  displayedColumns: string[] = []; // columns displayed on table at a given time\n  allColumns: string[] = []; // all the columns\n\n  @ViewChild('paginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input('countryData') set inputCountryData(val) {\n    if (val) {\n      this.countryData = [...val];\n      this.dataSource.paginator = this.paginator;\n      this.dataSource = new MatTableDataSource(this.countryData);\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n\n  constructor() {\n     this.countryData = [];\n     this.dataSource = new MatTableDataSource([]);\n     this.filterString = '';\n     this.allColumns = ['countryName', 'newConfirmed', 'totalConfirmed', 'newDeaths', 'totalDeaths', 'newRecovered', 'totalRecovered'];\n     this.displayedColumns = [...this.allColumns]\n  }\n\n  /**\n   * Invoked after the table view is initialized to assign the paginator and sort to the table\n   *\n   * @memberof CountryStatisticsComponent\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n   * Invoked to filter the table based on searched string\n   *\n   * @memberof CountryStatisticsComponent\n   */\n  filterData() {\n    this.dataSource.filter = this.filterString;\n  }\n\n  /**\n   * Invoked on clicking sort on any column\n   *\n   * @param {*} event\n   * @memberof CountryStatisticsComponent\n   */\n  sortData(event) {\n    let colName = event.active;\n    let ascending = false;\n    if (event.direction === 'asc') ascending = true;\n    this.countryData.sort((a, b) => this.compare(a[colName], b[colName], ascending));\n    this.dataSource = new MatTableDataSource(this.countryData);\n  }\n\n  /**\n   * Compare function used for table sorting\n   *\n   * @param {(number | string)} a\n   * @param {(number | string)} b\n   * @param {boolean} isAsc\n   * @returns\n   * @memberof CountryStatisticsComponent\n   */\n  compare(a: number | string, b: number | string, isAsc: boolean) {\n    return (a \n    \n\n    \n        \n  \n    \n      \n      \n        \n          Search\n          \n          search\n        \n      \n      \n      \n        \n          view_column\n        \n        \n          Show All\n          Show Confirmed\n          Show Deaths\n          Show Recovered\n          Show New\n          Show Total\n        \n      \n    \n    \n      \n      \n         Country Name \n         {{element.countryName}} \n      \n\n      \n      \n         New Confirmed \n         {{element.newConfirmed}} \n      \n\n      \n      \n         Total Confirmed \n         {{element.totalConfirmed}} \n      \n\n      \n      \n         New Deaths \n         {{element.newDeaths}} \n      \n\n      \n      \n         Total Deaths \n         {{element.totalDeaths}} \n      \n\n      \n      \n         New Recovered \n         {{element.newRecovered}} \n      \n\n      \n      \n         Total Recovered \n         {{element.totalRecovered}} \n      \n      \n      \n      \n    \n    \n    \n    \n  \n  \n  \n    \n      Could not fetch the Country Data\n    \n  \n\n\n    \n\n    \n                \n                    ./country-statistics.component.css\n                \n                table {\n    width: 100%;\n}\n\n.container {\n    margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Search                    search                                            view_column                          Show All          Show Confirmed          Show Deaths          Show Recovered          Show New          Show Total                                           Country Name          {{element.countryName}}                            New Confirmed          {{element.newConfirmed}}                            Total Confirmed          {{element.totalConfirmed}}                            New Deaths          {{element.newDeaths}}                            Total Deaths          {{element.totalDeaths}}                            New Recovered          {{element.newRecovered}}                            Total Recovered          {{element.totalRecovered}}                                                         Could not fetch the Country Data      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountryStatisticsComponent', 'selector': 'app-country-statistics'},{'name': 'GlobalSummaryComponent', 'selector': 'app-global-summary'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountryStatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExportService.html":{"url":"injectables/ExportService.html","title":"injectable - ExportService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportAsExcelFile\n                            \n                            \n                                toExportFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/export.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportAsExcelFile\n                        \n                    \n                \n            \n            \n                \nexportAsExcelFile(json: any[], excelFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/export.service.ts:29\n                \n            \n\n\n            \n                \n                    Forms EXCEL data from the JSON object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    excelFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toExportFileName\n                        \n                    \n                \n            \n            \n                \ntoExportFileName(excelFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/export.service.ts:18\n                \n            \n\n\n            \n                \n                    Forms the file name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    excelFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as XLSX from 'xlsx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n\n  constructor() { }\n\n  /**\n   * Forms the file name\n   *\n   * @param {string} excelFileName\n   * @returns {string}\n   * @memberof ExportService\n   */\n  toExportFileName(excelFileName: string): string {\n    return `${excelFileName}_export_${new Date().getTime()}.xlsx`;\n  }\n\n  /**\n   * Forms EXCEL data from the JSON object\n   *\n   * @param {any[]} json\n   * @param {string} excelFileName\n   * @memberof ExportService\n   */\n  exportAsExcelFile(json: any[], excelFileName: string): void {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    const workbook: XLSX.WorkBook = {Sheets: {'data': worksheet}, SheetNames: ['data']};\n    XLSX.writeFile(workbook, this.toExportFileName(excelFileName));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FacadeService.html":{"url":"injectables/FacadeService.html","title":"injectable - FacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _apiService\n                            \n                            \n                                    Private\n                                _exportService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportAsExcelFile\n                            \n                            \n                                fetchData\n                            \n                            \n                                getCountryData\n                            \n                            \n                                getCurrentDate\n                            \n                            \n                                getGlobalData\n                            \n                            \n                                setCountryData\n                            \n                            \n                                setCurrentDate\n                            \n                            \n                                setGlobalData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    apiService\n                                \n                                \n                                    exportService\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/facade.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportAsExcelFile\n                        \n                    \n                \n            \n            \n                \nexportAsExcelFile(json: any[], excelFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:128\n                \n            \n\n\n            \n                \n                    Exports data to EXCEL file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    excelFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchData\n                        \n                    \n                \n            \n            \n                \nfetchData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:53\n                \n            \n\n\n            \n                \n                    Invokes the HTTP GET call with COVID API\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCountryData\n                        \n                    \n                \n            \n            \n                \ngetCountryData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:95\n                \n            \n\n\n            \n                \n                    Returns the Country Data array\n\n\n                    \n                    \n                    \n                        Returns :         CountryData[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentDate\n                        \n                    \n                \n            \n            \n                \ngetCurrentDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:116\n                \n            \n\n\n            \n                \n                    Returns the current Date\n\n\n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGlobalData\n                        \n                    \n                \n            \n            \n                \ngetGlobalData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:74\n                \n            \n\n\n            \n                \n                    Returns the Global Data object\n\n\n                    \n                    \n                    \n                        Returns :         GlobalData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCountryData\n                        \n                    \n                \n            \n            \n                \nsetCountryData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:85\n                \n            \n\n\n            \n                \n                    Parses and Sets the Country Data array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentDate\n                        \n                    \n                \n            \n            \n                \nsetCurrentDate(dateData: string | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:106\n                \n            \n\n\n            \n                \n                    Sets the current date from the API\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateData\n                                    \n                                            string | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGlobalData\n                        \n                    \n                \n            \n            \n                \nsetGlobalData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/facade.service.ts:64\n                \n            \n\n\n            \n                \n                    Parses and Sets the Global Data object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _apiService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/facade.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _exportService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExportService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/facade.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        apiService\n                    \n                \n\n                \n                    \n                        getapiService()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/facade.service.ts:25\n                                \n                            \n                    \n                        \n                                Getter for ApiService\n\n\n                                \n                                \n                                \n                                    Returns :         ApiService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        exportService\n                    \n                \n\n                \n                    \n                        getexportService()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/facade.service.ts:40\n                                \n                            \n                    \n                        \n                                Getter for ExportService\n\n\n                                \n                                \n                                \n                                    Returns :         ExportService\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CountryData } from '../classes/countryData';\nimport { GlobalData } from '../classes/globalData';\nimport { ApiService } from './api.service';\nimport { ExportService } from './export.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacadeService {\n\n  private _apiService: ApiService;\n  private _exportService: ExportService;\n\n  constructor(private injector: Injector) { }\n\n  /**\n   * Getter for ApiService\n   *\n   * @readonly\n   * @type {ApiService}\n   * @memberof FacadeService\n   */\n  private get apiService(): ApiService {\n    if (!this._apiService) {\n      this._apiService = this.injector.get(ApiService);\n    }\n    return this._apiService;\n  }\n\n  /**\n   * Getter for ExportService\n   *\n   * @readonly\n   * @private\n   * @type {ExportService}\n   * @memberof FacadeService\n   */\n  private get exportService(): ExportService {\n    if (!this._exportService) {\n      this._exportService = this.injector.get(ExportService);\n    }\n    return this._exportService;\n  }\n\n  /**\n   * Invokes the HTTP GET call with COVID API\n   *\n   * @returns {Observable}\n   * @memberof FacadeService\n   */\n  fetchData(): Observable {\n    return this.apiService.fetchData();\n  }\n\n  /**\n   * Parses and Sets the Global Data object\n   *\n   * @param {*} data\n   * @returns\n   * @memberof FacadeService\n   */\n  setGlobalData(data: any) {\n    return this.apiService.setGlobalData(data);\n  }\n\n  /**\n   * Returns the Global Data object\n   *\n   * @returns {GlobalData}\n   * @memberof FacadeService\n   */\n  getGlobalData(): GlobalData {\n    return this.apiService.getGlobalData();\n  }\n\n  /**\n   * Parses and Sets the Country Data array\n   *\n   * @param {*} data\n   * @returns\n   * @memberof FacadeService\n   */\n  setCountryData(data: any) {\n    return this.apiService.setCountryData(data);\n  }\n\n  /**\n   * Returns the Country Data array\n   *\n   * @returns {CountryData[]}\n   * @memberof FacadeService\n   */\n  getCountryData(): CountryData[] {\n    return this.apiService.getCountryData();\n  }\n\n  /**\n   * Sets the current date from the API\n   *\n   * @param {(string | any)} dateData\n   * @returns\n   * @memberof FacadeService\n   */\n  setCurrentDate(dateData: string | any) {\n    return this.apiService.setCurrentDate(dateData);\n  }\n\n  /**\n   * Returns the current Date\n   *\n   * @returns {Date}\n   * @memberof FacadeService\n   */\n  getCurrentDate(): Date {\n    return this.apiService.getCurrentDate();\n  }\n\n  /**\n   * Exports data to EXCEL file\n   *\n   * @param {any[]} json\n   * @param {string} excelFileName\n   * @returns {void}\n   * @memberof FacadeService\n   */\n  exportAsExcelFile(json: any[], excelFileName: string): void {\n    return this.exportService.exportAsExcelFile(json, excelFileName);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalData.html":{"url":"classes/GlobalData.html","title":"class - GlobalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/globalData.ts\n        \n\n\n            \n                Description\n            \n            \n                Schema to store the Global Summary\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                newConfirmed\n                            \n                            \n                                    Public\n                                newDeaths\n                            \n                            \n                                    Public\n                                newRecovered\n                            \n                            \n                                    Public\n                                totalConfirmed\n                            \n                            \n                                    Public\n                                totalDeaths\n                            \n                            \n                                    Public\n                                totalRecovered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/globalData.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/globalData.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newDeaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/globalData.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newRecovered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/globalData.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalConfirmed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/globalData.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalDeaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/globalData.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalRecovered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/globalData.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GlobalData {\n    public newConfirmed: number;\n    public totalConfirmed: number;\n    public newDeaths: number;\n    public totalDeaths: number;\n    public newRecovered: number;\n    public totalRecovered: number;\n\n    constructor() {\n        this.newConfirmed = null;\n        this.totalConfirmed = null;\n        this.newDeaths = null;\n        this.totalDeaths = null;\n        this.newRecovered = null;\n        this.totalRecovered = null;\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalSummaryComponent.html":{"url":"components/GlobalSummaryComponent.html","title":"component - GlobalSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GlobalSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/global-summary/global-summary.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for displayinng the Global Summary\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-summary\n            \n\n            \n                styleUrls\n                ./global-summary.component.css\n            \n\n\n\n            \n                templateUrl\n                ./global-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                globalData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/global-summary/global-summary.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        globalData\n                    \n                \n                \n                    \n                        Type :         GlobalData\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/global-summary/global-summary.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { GlobalData } from 'src/app/classes/globalData';\nimport { FacadeService } from 'src/app/services/facade.service';\n\n/**\n * This component is responsible for displayinng the Global Summary\n *\n * @export\n * @class GlobalSummaryComponent\n */\n@Component({\n  selector: 'app-global-summary',\n  templateUrl: './global-summary.component.html',\n  styleUrls: ['./global-summary.component.css']\n})\nexport class GlobalSummaryComponent {\n\n  @Input() globalData: GlobalData = null;\n\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          New Confirmed : \n          {{ globalData.newConfirmed }}\n        \n      \n    \n    \n    \n      \n        \n          Total Confirmed : \n          {{ globalData.totalConfirmed }}\n        \n      \n    \n    \n    \n      \n        \n          New Deaths : \n          {{ globalData.newDeaths }}\n        \n      \n    \n    \n    \n      \n        \n          Total Deaths : \n          {{ globalData.totalDeaths }}\n        \n      \n    \n    \n    \n      \n        \n          New Recovered : \n          {{ globalData.newRecovered }}\n        \n      \n    \n    \n    \n      \n        \n          Total Recovered : \n          {{ globalData.totalRecovered }}\n        \n      \n    \n  \n  \n  \n    \n      Could not fetch the Global Summary\n    \n  \n\n\n    \n\n    \n                \n                    ./global-summary.component.css\n                \n                .row {\n    margin: 1rem;\n}\n\n.death-card {\n    background: #ff000047;\n}\n\n.recovered-card {\n    background: #0080003b\n}\n\n.confirmed-card {\n    background-color: aliceblue;\n}\n\nspan {\n    white-space: pre;\n}\n\ndiv span:first-child {\n    font-style: italic;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  New Confirmed :           {{ globalData.newConfirmed }}                                                  Total Confirmed :           {{ globalData.totalConfirmed }}                                                  New Deaths :           {{ globalData.newDeaths }}                                                  Total Deaths :           {{ globalData.totalDeaths }}                                                  New Recovered :           {{ globalData.newRecovered }}                                                  Total Recovered :           {{ globalData.totalRecovered }}                                  Could not fetch the Global Summary      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountryStatisticsComponent', 'selector': 'app-country-statistics'},{'name': 'GlobalSummaryComponent', 'selector': 'app-global-summary'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        This page is the landing page of the application responsible for displaying the header,\ntabs and invoking the child components to display the Global summary and Country data\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryData\n                            \n                            \n                                currentDate\n                            \n                            \n                                globalData\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportData\n                            \n                            \n                                fetchData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                setInitialValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(facadeService: FacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        facadeService\n                                                  \n                                                        \n                                                                        FacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportData\n                        \n                    \n                \n            \n            \n                \nexportData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:92\n                \n            \n\n\n            \n                \n                    Invoked to export data into an EXCEL file\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchData\n                        \n                    \n                \n            \n            \n                \nfetchData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:57\n                \n            \n\n\n            \n                \n                    Invokes the service to fetch the data and get the parsed Global and Country data required to be displayed by\npassing them on to child components\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:35\n                \n            \n\n\n            \n                \n                    Invoked after the constructor to fetch the data from the COVID API\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:82\n                \n            \n\n\n            \n                \n                    Refreshes the page by fetching the data again\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInitialValues\n                        \n                    \n                \n            \n            \n                \nsetInitialValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:44\n                \n            \n\n\n            \n                \n                    Initializes variables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countryData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CountryData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        globalData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalData\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GlobalData } from 'src/app/classes/globalData';\nimport { CountryData } from 'src/app/classes/countryData';\nimport { FacadeService } from '../../services/facade.service';\n\n/**\n * This page is the landing page of the application responsible for displaying the header,\n * tabs and invoking the child components to display the Global summary and Country data\n *\n * @export\n * @class HomeComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  globalData: GlobalData = null;\n  countryData: CountryData[] = [];\n  loading: boolean = true;\n  currentDate: Date = null;\n\n  constructor(private facadeService: FacadeService) {\n    this.setInitialValues();\n  }\n\n  /**\n   * Invoked after the constructor to fetch the data from the COVID API\n   *\n   * @memberof HomeComponent\n   */\n  ngOnInit(): void {\n    this.fetchData();\n  }\n\n  /**\n   * Initializes variables\n   *\n   * @memberof HomeComponent\n   */\n  setInitialValues() {\n    this.globalData = null;\n    this.countryData = [];\n    this.loading = true;\n    this.currentDate = null;\n  }\n\n  /**\n   * Invokes the service to fetch the data and get the parsed Global and Country data required to be displayed by\n   * passing them on to child components\n   *\n   * @memberof HomeComponent\n   */\n  fetchData() {\n    this.facadeService.fetchData().subscribe((res) => {\n      try {\n        this.facadeService.setGlobalData(res.Global);\n        this.facadeService.setCountryData(res.Countries);\n        this.facadeService.setCurrentDate(res.Global);\n        this.globalData = this.facadeService.getGlobalData();\n        this.countryData = this.facadeService.getCountryData();\n        this.currentDate = this.facadeService.getCurrentDate();\n      } catch (err) {\n        console.log('Error while fetching the data', err);\n      }\n      this.loading = false;\n    }, (err) => {\n      console.log('Error while fetching the data', err);\n      this.loading = false;\n\n    })\n  }\n\n  /**\n   * Refreshes the page by fetching the data again\n   *\n   * @memberof HomeComponent\n   */\n  refresh() {\n    this.setInitialValues();\n    this.fetchData();\n  }\n\n  /**\n   * Invoked to export data into an EXCEL file\n   *\n   * @memberof HomeComponent\n   */\n  exportData() {\n    this.facadeService.exportAsExcelFile([{countryName: 'Global', ...this.globalData}, ...this.countryData], 'COVID-data');\n  }\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      table_chart\n    \n    Worldwide COVID Statistics\n    \n    \n    \n      Export\n    \n    \n      Refresh\n    \n  \n\n\n\n  \n  \n    \n    \n      \n        \n      \n    \n    \n    \n      \n        {{ currentDate | date: 'medium' }}\n      \n      \n    \n  \n  \n  \n    \n    \n      \n        \n      \n    \n    \n    \n      \n        {{ currentDate | date: 'medium' }}\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n\n.spinner {\n    margin-top: 3rem;\n    overflow-y: hidden;\n}\n\n.btn-spacing {\n    margin-right: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            table_chart        Worldwide COVID Statistics                  Export              Refresh                                                                {{ currentDate | date: \\'medium\\' }}                                                                            {{ currentDate | date: \\'medium\\' }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountryStatisticsComponent', 'selector': 'app-country-statistics'},{'name': 'GlobalSummaryComponent', 'selector': 'app-global-summary'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/classes/countryData.ts\n            \n            class\n            CountryData\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/classes/globalData.ts\n            \n            class\n            GlobalData\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/country-statistics/country-statistics.component.ts\n            \n            component\n            CountryStatisticsComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/components/global-summary/global-summary.component.ts\n            \n            component\n            GlobalSummaryComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/constants/constants.ts\n            \n            variable\n            COVID_API\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/services/export.service.ts\n            \n            injectable\n            ExportService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/facade.service.ts\n            \n            injectable\n            FacadeService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.4\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.0.4\n        \n            @angular/compiler : ~10.0.4\n        \n            @angular/core : ~10.0.4\n        \n            @angular/forms : ~10.0.4\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.0.4\n        \n            @angular/platform-browser-dynamic : ~10.0.4\n        \n            @angular/router : ~10.0.4\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            xlsx : ^0.17.3\n        \n            zone.js : ~0.10.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCovidStatisticsViewer\nThis project was generated with Angular CLI version 10.0.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCountryStatisticsComponent\n\nCountryStatisticsComponent\n\nAppModule -->\n\nCountryStatisticsComponent->AppModule\n\n\n\n\n\nGlobalSummaryComponent\n\nGlobalSummaryComponent\n\nAppModule -->\n\nGlobalSummaryComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nFacadeService\n\nFacadeService\n\nAppModule -->\n\nFacadeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            COVID_API   (src/.../constants.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/constants/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COVID_API\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.covid19api.com/summary'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
